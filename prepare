#! env zsh

set -e -u
#contains dictionnaries available in the environment
local -A key pod_server encoding_server
#encoding_bin is an array
local -a encoding_bin
local it=

encoding_bin=(
    process
    dtrt-ffmpeg-downscale
    dtrt-ffmpeg-guess-config
    dtrt-ffmpeg-overview
    dtrt-ffmpeg-thumbnails
    dtrt-ffmpeg.zsh
    pod-ssh.zsh
    ffmpod )

key_generation () {
    ssh-keygen -t ed25519 -N '' -C $key[desc] -f $key[private] }

# what will be sent to the encoding server

prepare_bag_encoding () {

    local it dest=$bag/encoding

    for it ( $dest/bin ) {
        mkdir -p $it
        cp dtrt-ffmpeg/bin/$^encoding_bin $it
    }

    cp $key[private] $dest/pod
    cp files/install_pod.sh $dest/run

    # build a new public key with authorized command in it

    print $encoding_server[authorize] $(< $key[public]) >  $dest/pod.pub
}

#what will be sent to the pod server
prepare_bag_pod () {
    local it dest=$bag/pod

    for it ( $dest/bin ) {
        mkdir -p $it
        cp dtrt-ffmpeg/bin/navigator-wrapper $it
    }

    cp $key[private] $dest/pod

    { cat files/install_pod.sh
        print 'cp podrc ~/.podrc' } > $dest/run

    print pod=$pod_server[pod] > $dest/podrc

    # build a new public key with authorized command in it
    print $encoding_server[authorize] $(< $key[public] ) > $dest/pod.pub
}

test_ssh_access () {
    for it ( encoding_server pod_server )
        ssh ${${(P)it}[ssh]} :
}

bagin () { tar hcf - "$@" }

bagx () {

	# wraps a tar archive into a self-extracting
	# shell script

    echo '
    set -e -x
    cd ${~AIRBORNE_DIR:=$( mktemp -d ${~AIRBORNE_TMPL:=/tmp/airborne.XXXXXXXXXX} )}
    tar xf - <<\\0db3972a-7ab7-4b4e-a327-db8096e1b726 && '${*:-. ./run}
    cat
    echo 0db3972a-7ab7-4b4e-a327-db8096e1b726
}

# transform a bag to an self-extractable script send to stdout.
# the result should be passed as stdin to a zsh
# exemples:
# kameameaaa path/to/my/bag | sudo -u demo zsh
# kameameaaa path/to/my/bag | ssh server.example.com zsh
# kameameaaa path/to/my/bag > A; zsh < A

kameameaaa () { bagin -C "$@" | bagx }

# non interactive ssh command
s () { ssh -oBatchMode=yes "$@" }

####################### here starts the main script

# load the environment

. ${1?configuration file, read the documentation to know the parameters}

# die if no declared bag
: ${bag?a destination directory (known as \$bag) must be configured}

# add default values

key=(
    public ${key[private]?key[private] contains the path of the private key}.pub
    desc   'ffmpod ssh service key'
    ${(kv)key} )

# generate key pair if missing 
test -f $key[private] ||
	key_generation

# prepare bags to kameameaaa

prepare_bag_encoding
prepare_bag_pod

# kameameaaa for each servers declared in $install (separated by space)
# examples:
# * install='pod encoding'
# * install='encoding'
# * install=''

for it (${=install:-}) {
    case $it {
        (pod)      kameameaaa $bag/pod      . | s $pod_server[ssh] zsh ;;
        (encoding) kameameaaa $bag/encoding . | s $encoding_server[ssh] zsh ;;
    }
}
